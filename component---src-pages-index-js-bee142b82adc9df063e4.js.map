{"version":3,"sources":["webpack:///./src/components/100-illustrations.js","webpack:///./src/components/hero.js","webpack:///./src/components/product.js","webpack:///./src/components/featured.js","webpack:///./src/components/covid-19.js","webpack:///./src/pages/index.js"],"names":["Challange","data","useStaticQuery","illlus","site","siteMetadata","title","allMarkdownRemark","edges","className","map","node","frontmatter","src","png","childImageSharp","fluid","tags","includes","href","svg","publicURL","download","Hero","Product","target","Featured","COVID19","Index","render","this","props","siteTitle","location","React","Component"],"mappings":"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","file":"component---src-pages-index-js-bee142b82adc9df063e4.js","sourcesContent":["\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\n\nconst Challange = () => {\n  const data = useStaticQuery(graphql`\n    query illlustrationQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n      allMarkdownRemark(\n        sort: { fields: [frontmatter___date], order: ASC }\n      ) {\n        edges {\n          node {\n            excerpt(format: HTML)\n            html\n            frontmatter {\n              date(formatString: \"MMMM DD, YYYY\")\n              title\n              author\n              category\n              tags\n              svg {\n                publicURL\n              }\n              png {\n                publicURL\n              }\n              png{\n                childImageSharp {\n                  fluid {\n                    src\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const siteTitle = data.site.siteMetadata.title\n  const illlus = data.allMarkdownRemark.edges\n  return (\n    <section className=\"illus\">\n      <div className=\"container\">\n        <div className=\"title\">\n          <h1>Explore all</h1>\n        </div>\n        <div className=\"illus-wrap\">\n        {illlus.map(({ node }) => {\n          const title = node.frontmatter.title\n          return (\n            <div className=\"day-box\">\n              <div className=\"i-wrap\">\n\n                <div className=\"img\">\n                  <img src={node.frontmatter.png.childImageSharp.fluid.src}/>\n                </div>\n\n                <div className=\"info\">\n                  <h5>{node.frontmatter.title}</h5>\n                  { node.frontmatter.tags.includes('sold')?\n                  <div className=\"btns sold\"><h4>Sold</h4></div>\n                  : <div className=\"btns\">\n                    <a href={node.frontmatter.svg.publicURL} download className=\"btn-svg\">SVG</a>\n                    <a href={node.frontmatter.png.publicURL} download className=\"btn-png\">PNG</a>\n                  </div>\n\n                  }\n\n\n\n                </div>\n\n              </div>\n            </div>\n          )\n        })}\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default Challange\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\n\nconst Hero = () => {\n  return (\n    <section className=\"hero_section\">\n      <div className=\"container\">\n        <div className=\"hero_wrapper\">\n          <div className=\"hero_img\">\n            <img src=\"/notebook.png\" />\n          </div>\n          <div className=\"hero_details\">\n            <div className=\"texts\">\n              <h1>Open source illustrations kit</h1>\n              <p>Designed <strong>100 awesome illustrations</strong> during 100 days of illustration challenge (Now added more than <strong>120+ </strong>illustrations). You can download all illustrations completely <strong>free</strong> and <strong>use</strong> these to design awesome - landing pages, mobile app or presentations.</p>\n            </div>\n\n            <div className=\"btn-lnks\">\n              <div className=\"dwn-links\">\n                <button className=\"btn btn-download\">\n                  <h4>Download all</h4>\n                  <span>AI, SVG, PNG, EPS and Figma</span>\n                </button>\n                <ul className=\"dwn-list\">\n                  <li><a href=\"https://github.com/realvjy/illlustrations/releases/download/1.0.3/illlustrations.co.1.0.3.zip\">AI, SVG and PNG Files</a></li>\n                  <li><a href=\"https://www.dropbox.com/sh/wd9awx71rx5fr8z/AABATGMLfrM6d_kQLj__yaQga?dl=0\">EPS Files</a></li>\n                  <li><a href=\"https://www.figma.com/community/file/810922307190314237\">Get Figma File</a></li>\n                </ul>\n              </div>\n              <a href=\"https://www.buymeacoffee.com/realvjy\" className=\"btn btn-coffee\">\n                <h4>Buy me a coffee</h4>\n                <span>and show some love</span>\n              </a>\n            </div>\n            <div className=\"license\">\n            <p>Free for <a href=\"/license\">Commercial and Personal Use</a>. No need to credit, license, or anything.</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default Hero\n","\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\n\nconst Product = () => {\n  return (\n    <section className=\"product\">\n      <div className=\"container\">\n        <h4>OTHER PRODUCTS</h4>\n        <div className=\"product-wrap\">\n          <div className=\"product-box\">\n            <a href=\"https://contrauikit.com/?ref=illlustrations\" target=\"__blank\" className=\"p-box\">\n              <img src=\"contra.svg\" />\n            </a>\n          </div>\n          <div className=\"product-box\">\n            <a href=\"https://uiprint.co/?ref=illlustrations\" target=\"__blank\" className=\"p-box\">\n              <img src=\"uiprint.svg\" />\n            </a>\n          </div>\n\n          <div className=\"product-box\">\n            <a href=\"https://instagram.com/uihues?ref=illlustrations\" target=\"__blank\" className=\"p-box\">\n              <img src=\"uihues.svg\" />\n            </a>\n          </div>\n\n          <div className=\"product-box\">\n            <a href=\"https://uilogos.co/?ref=illlustrations\" className=\"p-box\"target=\"__blank\" >\n              <img src=\"uilogos.svg\" />\n            </a>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default Product\n","\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\n\nconst Featured = () => {\n  const data = useStaticQuery(graphql`\n    query featuredQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n      allMarkdownRemark(\n        sort: { fields: [frontmatter___date], order: DESC }\n        filter: { frontmatter: { featured: { eq: true } } }\n      ) {\n        edges {\n          node {\n            excerpt(format: HTML)\n            html\n            frontmatter {\n              date(formatString: \"MMMM DD, YYYY\")\n              title\n              author\n              category\n              svg {\n                publicURL\n              }\n              png {\n                publicURL\n              }\n              png{\n                childImageSharp {\n                  fluid {\n                    src\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const siteTitle = data.site.siteMetadata.title\n  const illlus = data.allMarkdownRemark.edges\n\n  return (\n    <section className=\"illus chris\">\n      <div className=\"container\">\n        <div className=\"title\">\n          <h1>20 New Illustrations</h1>\n        </div>\n        <div className=\"illus-wrap\">\n        {illlus.map(({ node }) => {\n          const title = node.frontmatter.title\n          return (\n            <div className=\"day-box\">\n              <div className=\"i-wrap\">\n\n                <div className=\"img\">\n                  <img src={node.frontmatter.png.childImageSharp.fluid.src}/>\n                </div>\n\n                <div className=\"info\">\n                  <h5>{node.frontmatter.title}</h5>\n                  <div className=\"btns\">\n                    <a href={node.frontmatter.svg.publicURL} download className=\"btn-svg\">SVG</a>\n                    <a href={node.frontmatter.png.publicURL} download className=\"btn-png\">PNG</a>\n                  </div>\n                </div>\n\n              </div>\n            </div>\n          )\n          })}\n          </div>\n          <div className=\"feature-dwn\">\n            <div className=\"btn-lnks\">\n              <a href=\"https://github.com/realvjy/illlustrations/releases/download/1.0.2/20.illustrations.pack.zip\" className=\"btn btn-coffee\"><h4>Download New Pack</h4></a>\n              <div className=\"dwn-links\">\n                <button className=\"btn btn-download\">\n                  <h4>Download all</h4>\n                </button>\n                <ul className=\"dwn-list\">\n                  <li><a href=\"https://github.com/realvjy/illlustrations/releases/download/1.0.3/illlustrations.co.1.0.3.zip\">AI, SVG and PNG Files</a></li>\n                  <li><a href=\"https://www.dropbox.com/sh/wd9awx71rx5fr8z/AABATGMLfrM6d_kQLj__yaQga?dl=0\">EPS Files</a></li>\n                  <li><a href=\"https://www.figma.com/community/file/810922307190314237\">Get Figma File</a></li>\n                </ul>\n              </div>\n            </div>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default Featured\n","\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\n\nconst COVID19 = () => {\n  const data = useStaticQuery(graphql`\n    query covidQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n      allMarkdownRemark(\n        sort: { fields: [frontmatter___date], order: DESC }\n        filter: { frontmatter: { category: { eq: \"COVID\" } } }\n      ) {\n        edges {\n          node {\n            excerpt(format: HTML)\n            html\n            frontmatter {\n              date(formatString: \"MMMM DD, YYYY\")\n              title\n              author\n              category\n              svg {\n                publicURL\n              }\n              png {\n                publicURL\n              }\n              png{\n                childImageSharp {\n                  fluid {\n                    src\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const siteTitle = data.site.siteMetadata.title\n  const illlus = data.allMarkdownRemark.edges\n\n  return (\n    <section className=\"illus covid\">\n      <div className=\"container\">\n        <div className=\"title\">\n          <h1>COVID & WFH </h1>\n        </div>\n        <div className=\"illus-wrap\">\n        {illlus.map(({ node }) => {\n          const title = node.frontmatter.title\n          return (\n            <div className=\"day-box\">\n              <div className=\"i-wrap\">\n\n                <div className=\"img\">\n                  <img src={node.frontmatter.png.childImageSharp.fluid.src}/>\n                </div>\n\n                <div className=\"info\">\n                  <h5>{node.frontmatter.title}</h5>\n                  <div className=\"btns\">\n                    <a href={node.frontmatter.svg.publicURL} download className=\"btn-svg\">SVG</a>\n                    <a href={node.frontmatter.png.publicURL} download className=\"btn-png\">PNG</a>\n                  </div>\n                </div>\n\n              </div>\n            </div>\n          )\n          })}\n          </div>\n          <div className=\"feature-dwn\">\n            <div className=\"btn-lnks\">\n              <a href=\"https://github.com/realvjy/illlustrations/releases/download/1.0.3/COVID.WFH.illlustrations.zip\" className=\"btn btn-coffee\"><h4>Download COVID Pack</h4></a>\n              <div className=\"dwn-links\">\n                <button className=\"btn btn-download\">\n                  <h4>Download all</h4>\n                </button>\n                <ul className=\"dwn-list\">\n                  <li><a href=\"https://github.com/realvjy/illlustrations/releases/download/1.0.3/illlustrations.co.1.0.3.zip\">AI, SVG and PNG Files</a></li>\n                  <li><a href=\"https://www.dropbox.com/sh/wd9awx71rx5fr8z/AABATGMLfrM6d_kQLj__yaQga?dl=0\">EPS Files</a></li>\n                  <li><a href=\"https://www.figma.com/community/file/810922307190314237\">Get Figma File</a></li>\n                </ul>\n              </div>\n            </div>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default COVID19\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Challange from \"../components/challenge\"\nimport Illustrations from \"../components/100-illustrations\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Hero from \"../components/hero\"\nimport Sponsored from \"../components/sponsored\"\nimport Product from \"../components/product\"\nimport Featured from \"../components/featured\"\nimport COVID19 from \"../components/covid-19\"\n\nclass Index extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"illlustrations - open source illustrations kit\" />\n        <Hero />\n        <COVID19 />\n        <Featured />\n        <Illustrations />\n        <Challange />\n        <Product />\n\n      </Layout>\n    )\n  }\n}\n\nexport default Index\n\nexport const pageQuery = graphql`\nquery {\n  site {\n    siteMetadata {\n      title\n    }\n  }\n  allMarkdownRemark(\n    sort: { fields: [frontmatter___date], order: DESC }\n  ) {\n    edges {\n      node {\n        excerpt(format: HTML)\n        html\n\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          author\n          category\n          png{\n            childImageSharp {\n              fluid {\n                src\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`\n"],"sourceRoot":""}